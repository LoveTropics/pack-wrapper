plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

group = 'com.lovetropics'
base {
    archivesName = 'pack-wrapper'
}

ext.buildnumber = 0
project.buildnumber = System.getenv('BUILD_NUMBER') ?: 'custom'

if (System.getenv('GHA_RELEASE_WORKFLOW')) {
    version = "${mod_version}"
} else if (System.getenv('GITHUB_RUN_NUMBER')) {
    project.buildnumber = System.getenv('GITHUB_RUN_NUMBER')
    version = "${mod_version}-${release_type}+${buildnumber}-gha"
} else {
    project.buildnumber = System.getenv('BUILD_NUMBER') ?: 'custom'
    version = "${mod_version}-${release_type}+${buildnumber}"
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'parchment', version: parchment_version

    runs {
        configureEach {
            copyIdeResources = true

            workingDirectory project.file('run')

            property 'forge.logging.console.level', 'info'

            mods {
                packwrapper {
                    source sourceSets.main
                }
            }
        }

        client {
            taskName 'runClient'
        }

        server {
            taskName 'runServer'
        }
    }
}


dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
}

tasks.named('jar', Jar).configure {
    finalizedBy 'reobfJar'

    manifest {
        attributes([
                "Specification-Title"     : "packwrapper",
                "Specification-Vendor"    : "lovetropics",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : archiveVersion,
                "Implementation-Vendor"   : "lovetropics",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            mod_version: mod_version,
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.named('downloadAssets').configure {
    enabled = !System.getenv('CI')
}
